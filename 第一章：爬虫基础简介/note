爬虫概念
    通过编写程序，模拟浏览器上网，然后在互联网上抓取数据的过程。

爬虫是否合法
    法律中不被禁止
    具有违法风险
    善意爬虫/恶意爬虫

爬虫带来的风险可以体现在以下两个方面
    干扰了被访问网站的正常运营
    爬虫抓取了受到法律保护的特定类型的数据或信息

如何让避免爬虫风险
    市场优化自己的程序，避免干扰被访问网站的正常运行
    审查抓取的内容

爬虫在使用场景中的分类
    -通用爬虫：
        抓取系统重要组成部分。抓取的是一整张页面数据。
    -聚焦爬虫（数据解析：正则/bs4/xpath）：
        建立在通用爬虫基础之上。抓取的是页面中特定的局部内容。
    -增量式爬虫：
        检测网站中数据更新的情况。只会抓取网站中最新更新出来的数据。

爬虫的矛盾
    既希望被爬又不希望被爬

反爬机制
    门户网站通过制定相应的策略或技术手段，防止爬虫程序进行网站数据的爬取
反反爬策略
    爬虫程序通过制定相关的策略或技术手段，破解门户网站中具备的反爬机制，从而可以获取门户网站的数据

robots.txt协议
    君子协议。规定了网站中哪些数据可以被爬虫爬取，哪些数据不可以被爬虫爬取
    http://www.baidu.com/robots.txt

http协议
    -概念：超文本传输协议。服务器与客户端进行数据交互的一种形式。

常用请求头信息
    -User-agent：表示请求载体的身份标识
        -抓包演示：
            打开网页，右击选择“检查”，点击“Network”，刷新该网页，任意打开一个数据包，点击Header，找到User-Agent
    -Connection：请求完毕后，是断开连接还是保持连接

常用响应头信息
    -Content-Type：服务器响应回客户端的数据类型

https协议
    -安全的http（超文本传输）协议。

加密方式
    -对称密钥加密
        客户端将即将发送的信息加密（该加密方式由客户端制定），加密完成后客户端将密文与密钥一同发送至服务器，服务器解密后得到信息
        缺点：
            具有安全隐患
    -非对称密钥加密
        客户端使用服务器端制定的公钥加密信息，并将密文发送至服务器，服务器使用私钥解密密文，得到信息
            例子：
                假设两个用户A向B发送信息，B的公钥为c，对应私钥（也是属于B的）为d，明文为x。
                A用公钥对明文进行加密形成密文c(x)，然后传输密文；
                B收到密文，用私钥对密文进行解密d(c(x))，得到要通信的明文x。
        缺点：
            效率低
            要保证发送公钥时，不会被拦截和篡改
    -证书密钥加密（https采用方式）
        服务器端制定公钥，发送至证书认定机构给公钥签名，再将公钥发送至客户端，其他同非对称密钥加密。保证了公钥一定是由服务器端发送的


